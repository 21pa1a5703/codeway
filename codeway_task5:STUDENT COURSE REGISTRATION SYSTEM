import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

class Course {
    private String courseCode;
    private String title;
    private String description;
    private int capacity;
    private int enrolledStudents;

    public Course(String courseCode, String title, String description, int capacity) {
        this.courseCode = courseCode;
        this.title = title;
        this.description = description;
        this.capacity = capacity;
        this.enrolledStudents = 0;
    }

    public String getCourseCode() {
        return courseCode;
    }

    public String getTitle() {
        return title;
    }

    public String getDescription() {
        return description;
    }

    public int getCapacity() {
        return capacity;
    }

    public int getEnrolledStudents() {
        return enrolledStudents;
    }

    public void enrollStudent() {
        enrolledStudents++;
    }

    public void dropStudent() {
        enrolledStudents--;
    }

    public boolean isFull() {
        return enrolledStudents >= capacity;
    }
}

class Student {
    private int studentID;
    private String name;
    private List<Course> registeredCourses;

    public Student(int studentID, String name) {
        this.studentID = studentID;
        this.name = name;
        this.registeredCourses = new ArrayList<>();
    }

    public int getStudentID() {
        return studentID;
    }

    public String getName() {
        return name;
    }

    public List<Course> getRegisteredCourses() {
        return registeredCourses;
    }

    public void registerCourse(Course course) {
        registeredCourses.add(course);
        course.enrollStudent();
    }

    public void dropCourse(Course course) {
        registeredCourses.remove(course);
        course.dropStudent();
    }
}

public class Main {
    public static void main(String[] args) {
        // Create courses
        Course javaCourse = new Course("CS101", "Introduction to Java Programming", "Learn Java basics", 30);
        Course dbCourse = new Course("CS102", "Database Management Systems", "Learn database concepts", 25);
        Course algoCourse = new Course("CS103", "Algorithms and Data Structures", "Learn algorithms", 35);

        // Create students
        Student student1 = new Student(1001, "Alice");
        Student student2 = new Student(1002, "Bob");

        // Register students for courses
        student1.registerCourse(javaCourse);
        student1.registerCourse(algoCourse);
        student2.registerCourse(dbCourse);

        // Display courses
        System.out.println("Available courses:");
        displayCourse(javaCourse);
        displayCourse(dbCourse);
        displayCourse(algoCourse);

        // Display students' registered courses
        System.out.println("\nStudents' registered courses:");
        displayStudentCourses(student1);
        displayStudentCourses(student2);
    }

    private static void displayCourse(Course course) {
        System.out.println("Course Code: " + course.getCourseCode());
        System.out.println("Title: " + course.getTitle());
        System.out.println("Description: " + course.getDescription());
        System.out.println("Capacity: " + course.getCapacity());
        System.out.println("Enrolled Students: " + course.getEnrolledStudents());
        System.out.println();
    }

    private static void displayStudentCourses(Student student) {
        System.out.println("Student ID: " + student.getStudentID());
        System.out.println("Name: " + student.getName());
        System.out.println("Registered Courses:");
        for (Course course : student.getRegisteredCourses()) {
            System.out.println("- " + course.getTitle());
        }
        System.out.println();
    }
}
